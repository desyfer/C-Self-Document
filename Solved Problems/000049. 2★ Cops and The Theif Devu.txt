Site: Codechef
Contest Code: PRACTICE
Problem Code: COPS
Self Difficult Rating: 2★ 

Problem Statement:
There are 100 houses located on a straight line. The first house is numbered 1 and the last one is numbered 100. Some M houses out of these 100 are occupied by cops.

Thief Devu has just stolen PeePee's bag and is looking for a house to hide in.

PeePee uses fast 4G Internet and sends the message to all the cops that a thief named Devu has just stolen her bag and ran into some house.

Devu knows that the cops run at a maximum speed of x houses per minute in a straight line and they will search for a maximum of y minutes. Devu wants to know how many houses are safe for him to escape from the cops. Help him in getting this information.

Input:
First line contains T, the number of test cases to follow.

First line of each test case contains 3 space separated integers: M, x and y.

For each test case, the second line contains M space separated integers which represent the house numbers where the cops are residing.

Output:
For each test case, output a single line containing the number of houses which are safe to hide from cops.

Constraints:
1 ≤ T ≤ 104
1 ≤ x, y, M ≤ 10

Sample Input:
3
4 7 8
12 52 56 8
2 10 2
21 75
2 5 8
10 51

Sample Output:
0
18
9

Solution:

#include <bits/stdc++.h>
using namespace std;

int main() {
	int t, m, x, y, a, h, c;
	cin>>t;
	for(int i = 0; i<t; i++) {
		int h[100] = {0}, c = 0;
		cin>>m>>x>>y;
		for(int r = 0; r<m; r++) {
			cin>>a;
			h[a-1]++;
			for(int k = 1; k<=(x*y); k++) {
				if(a-1+k<100) {
					h[a-1+k]++;
				}
				if(a-1-k>=0) {
					h[a-1-k]++;
				}
			}
		}
		for(int r = 0; r<100; r++) {
			if(h[r]== 0) {
				c++;
			}
		}
		cout<<c<<endl;
	}
	return 0;
}

Explanation:
Any house with a number greater than 0 is unsafe. First make every house with police as non-zero, then make every house the police can reach in both directions from their house as non-zero while keeping the array bounds in mind.